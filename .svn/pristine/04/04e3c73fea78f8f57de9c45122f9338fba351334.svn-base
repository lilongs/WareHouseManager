using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Data.SqlClient;
using System.Data;

namespace DALayer
{
    public  class DACustomer
    {
        Sqlconn DbHelperSQL = new Sqlconn(); //数据访问类

        #region DA层 Customer BasicMethod
        //** 备注：
        // 1、sqlparameter是用来给数据库中定义的变量传值用的

        /// <summary>
        /// 是否存在该记录
        /// </summary>
        public bool Exists(string Customer_ID)
        {
            StringBuilder strSql = new StringBuilder();
            strSql.Append("select count(1) from Customer");
            strSql.Append(" where Customer_ID=@Customer_ID ");
            SqlParameter[] parameters = {
					new SqlParameter("@Customer_ID", SqlDbType.NVarChar,10)			};
            parameters[0].Value = Customer_ID;

            return DbHelperSQL.Exists(strSql.ToString(), parameters);
        }


        /// <summary>
        /// 增加一条数据
        /// </summary>
        public bool Add(Model.Mo_Customer model)
        {
            StringBuilder strSql = new StringBuilder();
            strSql.Append("insert into Customer(");
            strSql.Append("Customer_ID,Name,Address,Phone,Fax,PostalCode,ConstactPerson,CreateDate,Remark)");
            strSql.Append(" values (");
            strSql.Append("@Customer_ID,@Name,@Address,@Phone,@Fax,@PostalCode,@ConstactPerson,@CreateDate,@Remark)");
            SqlParameter[] parameters = {
					new SqlParameter("@Customer_ID", SqlDbType.NVarChar,10),
					new SqlParameter("@Name", SqlDbType.VarChar,50),
					new SqlParameter("@Address", SqlDbType.NVarChar,100),
					new SqlParameter("@Phone", SqlDbType.NVarChar,20),
					new SqlParameter("@Fax", SqlDbType.NVarChar,25),
					new SqlParameter("@PostalCode", SqlDbType.NVarChar,10),
					new SqlParameter("@ConstactPerson", SqlDbType.NVarChar,20),
					new SqlParameter("@CreateDate", SqlDbType.NVarChar,100),
					new SqlParameter("@Remark", SqlDbType.NVarChar,100)};
            parameters[0].Value = model.Customer_ID;
            parameters[1].Value = model.Name;
            parameters[2].Value = model.Address;
            parameters[3].Value = model.Phone;
            parameters[4].Value = model.Fax;
            parameters[5].Value = model.PostalCode;
            parameters[6].Value = model.ConstactPerson;
            parameters[7].Value = model.CreateDate;
            parameters[8].Value = model.Remark;

            int rows = DbHelperSQL.ExecuteSql(strSql.ToString(), parameters);
            if (rows > 0)
            {
                return true;
            }
            else
            {
                return false;
            }
        }
        /// <summary>
        /// 更新一条数据
        /// </summary>
        public bool Update(Model.Mo_Customer model)
        {
            StringBuilder strSql = new StringBuilder();
            strSql.Append("update Customer set ");
            strSql.Append("Name=@Name,");
            strSql.Append("Address=@Address,");
            strSql.Append("Phone=@Phone,");
            strSql.Append("Fax=@Fax,");
            strSql.Append("PostalCode=@PostalCode,");
            strSql.Append("ConstactPerson=@ConstactPerson,");
            strSql.Append("CreateDate=@CreateDate,");
            strSql.Append("Remark=@Remark");
            strSql.Append(" where Customer_ID=@Customer_ID ");
            SqlParameter[] parameters = {
					new SqlParameter("@Name", SqlDbType.VarChar,50),
					new SqlParameter("@Address", SqlDbType.NVarChar,100),
					new SqlParameter("@Phone", SqlDbType.NVarChar,20),
					new SqlParameter("@Fax", SqlDbType.NVarChar,25),
					new SqlParameter("@PostalCode", SqlDbType.NVarChar,10),
					new SqlParameter("@ConstactPerson", SqlDbType.NVarChar,20),
					new SqlParameter("@CreateDate", SqlDbType.NVarChar,100),
					new SqlParameter("@Remark", SqlDbType.NVarChar,100),
					new SqlParameter("@Customer_ID", SqlDbType.NVarChar,10)};
            parameters[0].Value = model.Name;
            parameters[1].Value = model.Address;
            parameters[2].Value = model.Phone;
            parameters[3].Value = model.Fax;
            parameters[4].Value = model.PostalCode;
            parameters[5].Value = model.ConstactPerson;
            parameters[6].Value = model.CreateDate;
            parameters[7].Value = model.Remark;
            parameters[8].Value = model.Customer_ID;

            int rows = DbHelperSQL.ExecuteSql(strSql.ToString(), parameters);
            if (rows > 0)
            {
                return true;
            }
            else
            {
                return false;
            }
        }

        /// <summary>
        /// 删除一条数据
        /// </summary>
        public bool Delete(string Customer_ID)
        {

            StringBuilder strSql = new StringBuilder();
            strSql.Append("delete from Customer ");
            strSql.Append(" where Customer_ID=@Customer_ID ");
            SqlParameter[] parameters = {
					new SqlParameter("@Customer_ID", SqlDbType.NVarChar,10)			};
            parameters[0].Value = Customer_ID;

            int rows = DbHelperSQL.ExecuteSql(strSql.ToString(), parameters);
            if (rows > 0)
            {
                return true;
            }
            else
            {
                return false;
            }
        }
        /// <summary>
        /// 批量删除数据
        /// </summary>
        public bool DeleteList(string Customer_IDlist)
        {
            StringBuilder strSql = new StringBuilder();
            strSql.Append("delete from Customer ");
            strSql.Append(" where Customer_ID in (" + Customer_IDlist + ")  ");
            int rows = DbHelperSQL.ExecuteSqlRow(strSql.ToString());
            if (rows > 0)
            {
                return true;
            }
            else
            {
                return false;
            }
        }


        /// <summary>
        /// 得到一个对象实体
        /// </summary>
        public Model.Mo_Customer GetModel(string Customer_ID)
        {

            StringBuilder strSql = new StringBuilder();
            strSql.Append("select  top 1 Customer_ID,Name,Address,Phone,Fax,PostalCode,ConstactPerson,CreateDate,Remark from Customer ");
            strSql.Append(" where Customer_ID=@Customer_ID ");
            SqlParameter[] parameters = {
					new SqlParameter("@Customer_ID", SqlDbType.NVarChar,10)			};
            parameters[0].Value = Customer_ID;

            Model.Mo_Customer model = new Model.Mo_Customer();
            DataSet ds = DbHelperSQL.Query(strSql.ToString(), parameters);
            if (ds.Tables[0].Rows.Count > 0)
            {
                return DataRowToModel(ds.Tables[0].Rows[0]);
            }
            else
            {
                return null;
            }
        }


        /// <summary>
        /// 得到一个对象实体
        /// </summary>
        public Model.Mo_Customer DataRowToModel(DataRow row)
        {
            Model.Mo_Customer model = new Model.Mo_Customer();
            if (row != null)
            {
                if (row["Customer_ID"] != null)
                {
                    model.Customer_ID = row["Customer_ID"].ToString();
                }
                if (row["Name"] != null)
                {
                    model.Name = row["Name"].ToString();
                }
                if (row["Address"] != null)
                {
                    model.Address = row["Address"].ToString();
                }
                if (row["Phone"] != null)
                {
                    model.Phone = row["Phone"].ToString();
                }
                if (row["Fax"] != null)
                {
                    model.Fax = row["Fax"].ToString();
                }
                if (row["PostalCode"] != null)
                {
                    model.PostalCode = row["PostalCode"].ToString();
                }
                if (row["ConstactPerson"] != null)
                {
                    model.ConstactPerson = row["ConstactPerson"].ToString();
                }
                if (row["CreateDate"] != null)
                {
                    model.CreateDate = row["CreateDate"].ToString();
                }
                if (row["Remark"] != null)
                {
                    model.Remark = row["Remark"].ToString();
                }
            }
            return model;
        }

        /// <summary>
        /// 获得数据列表
        /// </summary>
        public DataSet GetList(string strWhere)
        {
            StringBuilder strSql = new StringBuilder();
            strSql.Append("select Customer_ID,Name,Address,Phone,Fax,PostalCode,ConstactPerson,CreateDate,Remark ");
            strSql.Append(" FROM Customer ");
            if (strWhere.Trim() != "")
            {
                strSql.Append(" where " + strWhere);
            }
            return DbHelperSQL.Query(strSql.ToString());
        }

    

        /// <summary>
        /// 获取记录总数
        /// </summary>
        public int GetRecordCount(string strWhere)
        {
            StringBuilder strSql = new StringBuilder();
            strSql.Append("select count(1) FROM Customer ");
            if (strWhere.Trim() != "")
            {
                strSql.Append(" where " + strWhere);
            }
            object obj = DbHelperSQL.GetSingle(strSql.ToString());
            if (obj == null)
            {
                return 0;
            }
            else
            {
                return Convert.ToInt32(obj);
            }
        }
      
        #endregion  BasicMethod
    }
}
